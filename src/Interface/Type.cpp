#include "Type.h"

BEG_META( XE::KeyCode )
type->Value( "None", XE::KeyCode::None );
type->Value( "Backspace", XE::KeyCode::Backspace );
type->Value( "Delete", XE::KeyCode::Delete );
type->Value( "Tab", XE::KeyCode::Tab );
type->Value( "Clear", XE::KeyCode::Clear );
type->Value( "Return", XE::KeyCode::Return );
type->Value( "Pause", XE::KeyCode::Pause );
type->Value( "Escape", XE::KeyCode::Escape );
type->Value( "Space", XE::KeyCode::Space );
type->Value( "Keypad0", XE::KeyCode::Keypad0 );
type->Value( "Keypad1", XE::KeyCode::Keypad1 );
type->Value( "Keypad2", XE::KeyCode::Keypad2 );
type->Value( "Keypad3", XE::KeyCode::Keypad3 );
type->Value( "Keypad4", XE::KeyCode::Keypad4 );
type->Value( "Keypad5", XE::KeyCode::Keypad5 );
type->Value( "Keypad6", XE::KeyCode::Keypad6 );
type->Value( "Keypad7", XE::KeyCode::Keypad7 );
type->Value( "Keypad8", XE::KeyCode::Keypad8 );
type->Value( "Keypad9", XE::KeyCode::Keypad9 );
type->Value( "KeypadPeriod", XE::KeyCode::KeypadPeriod );
type->Value( "KeypadDivide", XE::KeyCode::KeypadDivide );
type->Value( "KeypadMultiply", XE::KeyCode::KeypadMultiply );
type->Value( "KeypadMinus", XE::KeyCode::KeypadMinus );
type->Value( "KeypadPlus", XE::KeyCode::KeypadPlus );
type->Value( "KeypadEnter", XE::KeyCode::KeypadEnter );
type->Value( "KeypadEquals", XE::KeyCode::KeypadEquals );
type->Value( "UpArrow", XE::KeyCode::UpArrow );
type->Value( "DownArrow", XE::KeyCode::DownArrow );
type->Value( "RightArrow", XE::KeyCode::RightArrow );
type->Value( "LeftArrow", XE::KeyCode::LeftArrow );
type->Value( "Insert", XE::KeyCode::Insert );
type->Value( "Home", XE::KeyCode::Home );
type->Value( "End", XE::KeyCode::End );
type->Value( "PageUp", XE::KeyCode::PageUp );
type->Value( "PageDown", XE::KeyCode::PageDown );
type->Value( "F1", XE::KeyCode::F1 );
type->Value( "F2", XE::KeyCode::F2 );
type->Value( "F3", XE::KeyCode::F3 );
type->Value( "F4", XE::KeyCode::F4 );
type->Value( "F5", XE::KeyCode::F5 );
type->Value( "F6", XE::KeyCode::F6 );
type->Value( "F7", XE::KeyCode::F7 );
type->Value( "F8", XE::KeyCode::F8 );
type->Value( "F9", XE::KeyCode::F9 );
type->Value( "F10", XE::KeyCode::F10 );
type->Value( "F11", XE::KeyCode::F11 );
type->Value( "F12", XE::KeyCode::F12 );
type->Value( "F13", XE::KeyCode::F13 );
type->Value( "F14", XE::KeyCode::F14 );
type->Value( "F15", XE::KeyCode::F15 );
type->Value( "Alpha0", XE::KeyCode::Alpha0 );
type->Value( "Alpha1", XE::KeyCode::Alpha1 );
type->Value( "Alpha2", XE::KeyCode::Alpha2 );
type->Value( "Alpha3", XE::KeyCode::Alpha3 );
type->Value( "Alpha4", XE::KeyCode::Alpha4 );
type->Value( "Alpha5", XE::KeyCode::Alpha5 );
type->Value( "Alpha6", XE::KeyCode::Alpha6 );
type->Value( "Alpha7", XE::KeyCode::Alpha7 );
type->Value( "Alpha8", XE::KeyCode::Alpha8 );
type->Value( "Alpha9", XE::KeyCode::Alpha9 );
type->Value( "Exclaim", XE::KeyCode::Exclaim );
type->Value( "DoubleQuote", XE::KeyCode::DoubleQuote );
type->Value( "Hash", XE::KeyCode::Hash );
type->Value( "Dollar", XE::KeyCode::Dollar );
type->Value( "Ampersand", XE::KeyCode::Ampersand );
type->Value( "Quote", XE::KeyCode::Quote );
type->Value( "LeftParen", XE::KeyCode::LeftParen );
type->Value( "RightParen", XE::KeyCode::RightParen );
type->Value( "Asterisk", XE::KeyCode::Asterisk );
type->Value( "Plus", XE::KeyCode::Plus );
type->Value( "Comma", XE::KeyCode::Comma );
type->Value( "Minus", XE::KeyCode::Minus );
type->Value( "Period", XE::KeyCode::Period );
type->Value( "Slash", XE::KeyCode::Slash );
type->Value( "Colon", XE::KeyCode::Colon );
type->Value( "Semicolon", XE::KeyCode::Semicolon );
type->Value( "Less", XE::KeyCode::Less );
type->Value( "Equals", XE::KeyCode::Equals );
type->Value( "Greater", XE::KeyCode::Greater );
type->Value( "Question", XE::KeyCode::Question );
type->Value( "At", XE::KeyCode::At );
type->Value( "LeftBracket", XE::KeyCode::LeftBracket );
type->Value( "Backslash", XE::KeyCode::Backslash );
type->Value( "RightBracket", XE::KeyCode::RightBracket );
type->Value( "Caret", XE::KeyCode::Caret );
type->Value( "Underscore", XE::KeyCode::Underscore );
type->Value( "BackQuote", XE::KeyCode::BackQuote );
type->Value( "A", XE::KeyCode::A );
type->Value( "B", XE::KeyCode::B );
type->Value( "C", XE::KeyCode::C );
type->Value( "D", XE::KeyCode::D );
type->Value( "E", XE::KeyCode::E );
type->Value( "F", XE::KeyCode::F );
type->Value( "G", XE::KeyCode::G );
type->Value( "H", XE::KeyCode::H );
type->Value( "I", XE::KeyCode::I );
type->Value( "J", XE::KeyCode::J );
type->Value( "K", XE::KeyCode::K );
type->Value( "L", XE::KeyCode::L );
type->Value( "M", XE::KeyCode::M );
type->Value( "N", XE::KeyCode::N );
type->Value( "O", XE::KeyCode::O );
type->Value( "P", XE::KeyCode::P );
type->Value( "Q", XE::KeyCode::Q );
type->Value( "R", XE::KeyCode::R );
type->Value( "S", XE::KeyCode::S );
type->Value( "T", XE::KeyCode::T );
type->Value( "U", XE::KeyCode::U );
type->Value( "V", XE::KeyCode::V );
type->Value( "W", XE::KeyCode::W );
type->Value( "X", XE::KeyCode::X );
type->Value( "Y", XE::KeyCode::Y );
type->Value( "Z", XE::KeyCode::Z );
type->Value( "Numlock", XE::KeyCode::Numlock );
type->Value( "CapsLock", XE::KeyCode::CapsLock );
type->Value( "ScrollLock", XE::KeyCode::ScrollLock );
type->Value( "RightShift", XE::KeyCode::RightShift );
type->Value( "LeftShift", XE::KeyCode::LeftShift );
type->Value( "RightControl", XE::KeyCode::RightControl );
type->Value( "LeftControl", XE::KeyCode::LeftControl );
type->Value( "RightAlt", XE::KeyCode::RightAlt );
type->Value( "LeftAlt", XE::KeyCode::LeftAlt );
type->Value( "LeftCommand", XE::KeyCode::LeftCommand );
type->Value( "LeftApple", XE::KeyCode::LeftApple );
type->Value( "LeftWindows", XE::KeyCode::LeftWindows );
type->Value( "RightCommand", XE::KeyCode::RightCommand );
type->Value( "RightApple", XE::KeyCode::RightApple );
type->Value( "RightWindows", XE::KeyCode::RightWindows );
type->Value( "AltGr", XE::KeyCode::AltGr );
type->Value( "Help", XE::KeyCode::Help );
type->Value( "Print", XE::KeyCode::Print );
type->Value( "SysReq", XE::KeyCode::SysReq );
type->Value( "Break", XE::KeyCode::Break );
type->Value( "Menu", XE::KeyCode::Menu );
type->Value( "MouseLeft", XE::KeyCode::MouseLeft );
type->Value( "MouseMiddle", XE::KeyCode::MouseMiddle );
type->Value( "MouseRight", XE::KeyCode::MouseRight );
type->Value( "MouseButton0", XE::KeyCode::MouseButton0 );
type->Value( "MouseButton1", XE::KeyCode::MouseButton1 );
type->Value( "MouseButton2", XE::KeyCode::MouseButton2 );
type->Value( "MouseButton3", XE::KeyCode::MouseButton3 );
type->Value( "MouseButton4", XE::KeyCode::MouseButton4 );
type->Value( "MouseButton5", XE::KeyCode::MouseButton5 );
type->Value( "MouseButton6", XE::KeyCode::MouseButton6 );
type->Value( "MouseWheel", XE::KeyCode::MouseWheel );
type->Value( "MousePosition", XE::KeyCode::MousePosition );
type->Value( "JoystickButton0", XE::KeyCode::JoystickButton0 );
type->Value( "JoystickButton1", XE::KeyCode::JoystickButton1 );
type->Value( "JoystickButton2", XE::KeyCode::JoystickButton2 );
type->Value( "JoystickButton3", XE::KeyCode::JoystickButton3 );
type->Value( "JoystickButton4", XE::KeyCode::JoystickButton4 );
type->Value( "JoystickButton5", XE::KeyCode::JoystickButton5 );
type->Value( "JoystickButton6", XE::KeyCode::JoystickButton6 );
type->Value( "JoystickButton7", XE::KeyCode::JoystickButton7 );
type->Value( "JoystickButton8", XE::KeyCode::JoystickButton8 );
type->Value( "JoystickButton9", XE::KeyCode::JoystickButton9 );
type->Value( "JoystickButton10", XE::KeyCode::JoystickButton10 );
type->Value( "JoystickButton11", XE::KeyCode::JoystickButton11 );
type->Value( "JoystickButton12", XE::KeyCode::JoystickButton12 );
type->Value( "JoystickButton13", XE::KeyCode::JoystickButton13 );
type->Value( "JoystickButton14", XE::KeyCode::JoystickButton14 );
type->Value( "JoystickButton15", XE::KeyCode::JoystickButton15 );
type->Value( "JoystickButton16", XE::KeyCode::JoystickButton16 );
type->Value( "JoystickButton17", XE::KeyCode::JoystickButton17 );
type->Value( "JoystickButton18", XE::KeyCode::JoystickButton18 );
type->Value( "JoystickButton19", XE::KeyCode::JoystickButton19 );
type->Value( "Joystick1Button0", XE::KeyCode::Joystick1Button0 );
type->Value( "Joystick1Button1", XE::KeyCode::Joystick1Button1 );
type->Value( "Joystick1Button2", XE::KeyCode::Joystick1Button2 );
type->Value( "Joystick1Button3", XE::KeyCode::Joystick1Button3 );
type->Value( "Joystick1Button4", XE::KeyCode::Joystick1Button4 );
type->Value( "Joystick1Button5", XE::KeyCode::Joystick1Button5 );
type->Value( "Joystick1Button6", XE::KeyCode::Joystick1Button6 );
type->Value( "Joystick1Button7", XE::KeyCode::Joystick1Button7 );
type->Value( "Joystick1Button8", XE::KeyCode::Joystick1Button8 );
type->Value( "Joystick1Button9", XE::KeyCode::Joystick1Button9 );
type->Value( "Joystick1Button10", XE::KeyCode::Joystick1Button10 );
type->Value( "Joystick1Button11", XE::KeyCode::Joystick1Button11 );
type->Value( "Joystick1Button12", XE::KeyCode::Joystick1Button12 );
type->Value( "Joystick1Button13", XE::KeyCode::Joystick1Button13 );
type->Value( "Joystick1Button14", XE::KeyCode::Joystick1Button14 );
type->Value( "Joystick1Button15", XE::KeyCode::Joystick1Button15 );
type->Value( "Joystick1Button16", XE::KeyCode::Joystick1Button16 );
type->Value( "Joystick1Button17", XE::KeyCode::Joystick1Button17 );
type->Value( "Joystick1Button18", XE::KeyCode::Joystick1Button18 );
type->Value( "Joystick1Button19", XE::KeyCode::Joystick1Button19 );
type->Value( "Joystick2Button0", XE::KeyCode::Joystick2Button0 );
type->Value( "Joystick2Button1", XE::KeyCode::Joystick2Button1 );
type->Value( "Joystick2Button2", XE::KeyCode::Joystick2Button2 );
type->Value( "Joystick2Button3", XE::KeyCode::Joystick2Button3 );
type->Value( "Joystick2Button4", XE::KeyCode::Joystick2Button4 );
type->Value( "Joystick2Button5", XE::KeyCode::Joystick2Button5 );
type->Value( "Joystick2Button6", XE::KeyCode::Joystick2Button6 );
type->Value( "Joystick2Button7", XE::KeyCode::Joystick2Button7 );
type->Value( "Joystick2Button8", XE::KeyCode::Joystick2Button8 );
type->Value( "Joystick2Button9", XE::KeyCode::Joystick2Button9 );
type->Value( "Joystick2Button10", XE::KeyCode::Joystick2Button10 );
type->Value( "Joystick2Button11", XE::KeyCode::Joystick2Button11 );
type->Value( "Joystick2Button12", XE::KeyCode::Joystick2Button12 );
type->Value( "Joystick2Button13", XE::KeyCode::Joystick2Button13 );
type->Value( "Joystick2Button14", XE::KeyCode::Joystick2Button14 );
type->Value( "Joystick2Button15", XE::KeyCode::Joystick2Button15 );
type->Value( "Joystick2Button16", XE::KeyCode::Joystick2Button16 );
type->Value( "Joystick2Button17", XE::KeyCode::Joystick2Button17 );
type->Value( "Joystick2Button18", XE::KeyCode::Joystick2Button18 );
type->Value( "Joystick2Button19", XE::KeyCode::Joystick2Button19 );
type->Value( "Joystick3Button0", XE::KeyCode::Joystick3Button0 );
type->Value( "Joystick3Button1", XE::KeyCode::Joystick3Button1 );
type->Value( "Joystick3Button2", XE::KeyCode::Joystick3Button2 );
type->Value( "Joystick3Button3", XE::KeyCode::Joystick3Button3 );
type->Value( "Joystick3Button4", XE::KeyCode::Joystick3Button4 );
type->Value( "Joystick3Button5", XE::KeyCode::Joystick3Button5 );
type->Value( "Joystick3Button6", XE::KeyCode::Joystick3Button6 );
type->Value( "Joystick3Button7", XE::KeyCode::Joystick3Button7 );
type->Value( "Joystick3Button8", XE::KeyCode::Joystick3Button8 );
type->Value( "Joystick3Button9", XE::KeyCode::Joystick3Button9 );
type->Value( "Joystick3Button10", XE::KeyCode::Joystick3Button10 );
type->Value( "Joystick3Button11", XE::KeyCode::Joystick3Button11 );
type->Value( "Joystick3Button12", XE::KeyCode::Joystick3Button12 );
type->Value( "Joystick3Button13", XE::KeyCode::Joystick3Button13 );
type->Value( "Joystick3Button14", XE::KeyCode::Joystick3Button14 );
type->Value( "Joystick3Button15", XE::KeyCode::Joystick3Button15 );
type->Value( "Joystick3Button16", XE::KeyCode::Joystick3Button16 );
type->Value( "Joystick3Button17", XE::KeyCode::Joystick3Button17 );
type->Value( "Joystick3Button18", XE::KeyCode::Joystick3Button18 );
type->Value( "Joystick3Button19", XE::KeyCode::Joystick3Button19 );
type->Value( "Joystick4Button0", XE::KeyCode::Joystick4Button0 );
type->Value( "Joystick4Button1", XE::KeyCode::Joystick4Button1 );
type->Value( "Joystick4Button2", XE::KeyCode::Joystick4Button2 );
type->Value( "Joystick4Button3", XE::KeyCode::Joystick4Button3 );
type->Value( "Joystick4Button4", XE::KeyCode::Joystick4Button4 );
type->Value( "Joystick4Button5", XE::KeyCode::Joystick4Button5 );
type->Value( "Joystick4Button6", XE::KeyCode::Joystick4Button6 );
type->Value( "Joystick4Button7", XE::KeyCode::Joystick4Button7 );
type->Value( "Joystick4Button8", XE::KeyCode::Joystick4Button8 );
type->Value( "Joystick4Button9", XE::KeyCode::Joystick4Button9 );
type->Value( "Joystick4Button10", XE::KeyCode::Joystick4Button10 );
type->Value( "Joystick4Button11", XE::KeyCode::Joystick4Button11 );
type->Value( "Joystick4Button12", XE::KeyCode::Joystick4Button12 );
type->Value( "Joystick4Button13", XE::KeyCode::Joystick4Button13 );
type->Value( "Joystick4Button14", XE::KeyCode::Joystick4Button14 );
type->Value( "Joystick4Button15", XE::KeyCode::Joystick4Button15 );
type->Value( "Joystick4Button16", XE::KeyCode::Joystick4Button16 );
type->Value( "Joystick4Button17", XE::KeyCode::Joystick4Button17 );
type->Value( "Joystick4Button18", XE::KeyCode::Joystick4Button18 );
type->Value( "Joystick4Button19", XE::KeyCode::Joystick4Button19 );
type->Value( "Joystick5Button0", XE::KeyCode::Joystick5Button0 );
type->Value( "Joystick5Button1", XE::KeyCode::Joystick5Button1 );
type->Value( "Joystick5Button2", XE::KeyCode::Joystick5Button2 );
type->Value( "Joystick5Button3", XE::KeyCode::Joystick5Button3 );
type->Value( "Joystick5Button4", XE::KeyCode::Joystick5Button4 );
type->Value( "Joystick5Button5", XE::KeyCode::Joystick5Button5 );
type->Value( "Joystick5Button6", XE::KeyCode::Joystick5Button6 );
type->Value( "Joystick5Button7", XE::KeyCode::Joystick5Button7 );
type->Value( "Joystick5Button8", XE::KeyCode::Joystick5Button8 );
type->Value( "Joystick5Button9", XE::KeyCode::Joystick5Button9 );
type->Value( "Joystick5Button10", XE::KeyCode::Joystick5Button10 );
type->Value( "Joystick5Button11", XE::KeyCode::Joystick5Button11 );
type->Value( "Joystick5Button12", XE::KeyCode::Joystick5Button12 );
type->Value( "Joystick5Button13", XE::KeyCode::Joystick5Button13 );
type->Value( "Joystick5Button14", XE::KeyCode::Joystick5Button14 );
type->Value( "Joystick5Button15", XE::KeyCode::Joystick5Button15 );
type->Value( "Joystick5Button16", XE::KeyCode::Joystick5Button16 );
type->Value( "Joystick5Button17", XE::KeyCode::Joystick5Button17 );
type->Value( "Joystick5Button18", XE::KeyCode::Joystick5Button18 );
type->Value( "Joystick5Button19", XE::KeyCode::Joystick5Button19 );
type->Value( "JoystickAxis0", XE::KeyCode::JoystickAxis0 );
type->Value( "JoystickAxis1", XE::KeyCode::JoystickAxis1 );
type->Value( "JoystickAxis2", XE::KeyCode::JoystickAxis2 );
type->Value( "JoystickAxis3", XE::KeyCode::JoystickAxis3 );
type->Value( "JoystickAxis4", XE::KeyCode::JoystickAxis4 );
type->Value( "JoystickAxis5", XE::KeyCode::JoystickAxis5 );
type->Value( "JoystickAxis6", XE::KeyCode::JoystickAxis6 );
type->Value( "JoystickAxis7", XE::KeyCode::JoystickAxis7 );
type->Value( "JoystickAxis8", XE::KeyCode::JoystickAxis8 );
type->Value( "JoystickAxis9", XE::KeyCode::JoystickAxis9 );
type->Value( "JoystickAxis10", XE::KeyCode::JoystickAxis10 );
type->Value( "JoystickAxis11", XE::KeyCode::JoystickAxis11 );
type->Value( "JoystickAxis12", XE::KeyCode::JoystickAxis12 );
type->Value( "JoystickAxis13", XE::KeyCode::JoystickAxis13 );
type->Value( "JoystickAxis14", XE::KeyCode::JoystickAxis14 );
type->Value( "JoystickAxis15", XE::KeyCode::JoystickAxis15 );
type->Value( "JoystickAxis16", XE::KeyCode::JoystickAxis16 );
type->Value( "JoystickAxis17", XE::KeyCode::JoystickAxis17 );
type->Value( "JoystickAxis18", XE::KeyCode::JoystickAxis18 );
type->Value( "JoystickAxis19", XE::KeyCode::JoystickAxis19 );
type->Value( "Joystick1Axis0", XE::KeyCode::Joystick1Axis0 );
type->Value( "Joystick1Axis1", XE::KeyCode::Joystick1Axis1 );
type->Value( "Joystick1Axis2", XE::KeyCode::Joystick1Axis2 );
type->Value( "Joystick1Axis3", XE::KeyCode::Joystick1Axis3 );
type->Value( "Joystick1Axis4", XE::KeyCode::Joystick1Axis4 );
type->Value( "Joystick1Axis5", XE::KeyCode::Joystick1Axis5 );
type->Value( "Joystick1Axis6", XE::KeyCode::Joystick1Axis6 );
type->Value( "Joystick1Axis7", XE::KeyCode::Joystick1Axis7 );
type->Value( "Joystick1Axis8", XE::KeyCode::Joystick1Axis8 );
type->Value( "Joystick1Axis9", XE::KeyCode::Joystick1Axis9 );
type->Value( "Joystick1Axis10", XE::KeyCode::Joystick1Axis10 );
type->Value( "Joystick1Axis11", XE::KeyCode::Joystick1Axis11 );
type->Value( "Joystick1Axis12", XE::KeyCode::Joystick1Axis12 );
type->Value( "Joystick1Axis13", XE::KeyCode::Joystick1Axis13 );
type->Value( "Joystick1Axis14", XE::KeyCode::Joystick1Axis14 );
type->Value( "Joystick1Axis15", XE::KeyCode::Joystick1Axis15 );
type->Value( "Joystick1Axis16", XE::KeyCode::Joystick1Axis16 );
type->Value( "Joystick1Axis17", XE::KeyCode::Joystick1Axis17 );
type->Value( "Joystick1Axis18", XE::KeyCode::Joystick1Axis18 );
type->Value( "Joystick1Axis19", XE::KeyCode::Joystick1Axis19 );
type->Value( "Joystick2Axis0", XE::KeyCode::Joystick2Axis0 );
type->Value( "Joystick2Axis1", XE::KeyCode::Joystick2Axis1 );
type->Value( "Joystick2Axis2", XE::KeyCode::Joystick2Axis2 );
type->Value( "Joystick2Axis3", XE::KeyCode::Joystick2Axis3 );
type->Value( "Joystick2Axis4", XE::KeyCode::Joystick2Axis4 );
type->Value( "Joystick2Axis5", XE::KeyCode::Joystick2Axis5 );
type->Value( "Joystick2Axis6", XE::KeyCode::Joystick2Axis6 );
type->Value( "Joystick2Axis7", XE::KeyCode::Joystick2Axis7 );
type->Value( "Joystick2Axis8", XE::KeyCode::Joystick2Axis8 );
type->Value( "Joystick2Axis9", XE::KeyCode::Joystick2Axis9 );
type->Value( "Joystick2Axis10", XE::KeyCode::Joystick2Axis10 );
type->Value( "Joystick2Axis11", XE::KeyCode::Joystick2Axis11 );
type->Value( "Joystick2Axis12", XE::KeyCode::Joystick2Axis12 );
type->Value( "Joystick2Axis13", XE::KeyCode::Joystick2Axis13 );
type->Value( "Joystick2Axis14", XE::KeyCode::Joystick2Axis14 );
type->Value( "Joystick2Axis15", XE::KeyCode::Joystick2Axis15 );
type->Value( "Joystick2Axis16", XE::KeyCode::Joystick2Axis16 );
type->Value( "Joystick2Axis17", XE::KeyCode::Joystick2Axis17 );
type->Value( "Joystick2Axis18", XE::KeyCode::Joystick2Axis18 );
type->Value( "Joystick2Axis19", XE::KeyCode::Joystick2Axis19 );
type->Value( "Joystick3Axis0", XE::KeyCode::Joystick3Axis0 );
type->Value( "Joystick3Axis1", XE::KeyCode::Joystick3Axis1 );
type->Value( "Joystick3Axis2", XE::KeyCode::Joystick3Axis2 );
type->Value( "Joystick3Axis3", XE::KeyCode::Joystick3Axis3 );
type->Value( "Joystick3Axis4", XE::KeyCode::Joystick3Axis4 );
type->Value( "Joystick3Axis5", XE::KeyCode::Joystick3Axis5 );
type->Value( "Joystick3Axis6", XE::KeyCode::Joystick3Axis6 );
type->Value( "Joystick3Axis7", XE::KeyCode::Joystick3Axis7 );
type->Value( "Joystick3Axis8", XE::KeyCode::Joystick3Axis8 );
type->Value( "Joystick3Axis9", XE::KeyCode::Joystick3Axis9 );
type->Value( "Joystick3Axis10", XE::KeyCode::Joystick3Axis10 );
type->Value( "Joystick3Axis11", XE::KeyCode::Joystick3Axis11 );
type->Value( "Joystick3Axis12", XE::KeyCode::Joystick3Axis12 );
type->Value( "Joystick3Axis13", XE::KeyCode::Joystick3Axis13 );
type->Value( "Joystick3Axis14", XE::KeyCode::Joystick3Axis14 );
type->Value( "Joystick3Axis15", XE::KeyCode::Joystick3Axis15 );
type->Value( "Joystick3Axis16", XE::KeyCode::Joystick3Axis16 );
type->Value( "Joystick3Axis17", XE::KeyCode::Joystick3Axis17 );
type->Value( "Joystick3Axis18", XE::KeyCode::Joystick3Axis18 );
type->Value( "Joystick3Axis19", XE::KeyCode::Joystick3Axis19 );
type->Value( "Joystick4Axis0", XE::KeyCode::Joystick4Axis0 );
type->Value( "Joystick4Axis1", XE::KeyCode::Joystick4Axis1 );
type->Value( "Joystick4Axis2", XE::KeyCode::Joystick4Axis2 );
type->Value( "Joystick4Axis3", XE::KeyCode::Joystick4Axis3 );
type->Value( "Joystick4Axis4", XE::KeyCode::Joystick4Axis4 );
type->Value( "Joystick4Axis5", XE::KeyCode::Joystick4Axis5 );
type->Value( "Joystick4Axis6", XE::KeyCode::Joystick4Axis6 );
type->Value( "Joystick4Axis7", XE::KeyCode::Joystick4Axis7 );
type->Value( "Joystick4Axis8", XE::KeyCode::Joystick4Axis8 );
type->Value( "Joystick4Axis9", XE::KeyCode::Joystick4Axis9 );
type->Value( "Joystick4Axis10", XE::KeyCode::Joystick4Axis10 );
type->Value( "Joystick4Axis11", XE::KeyCode::Joystick4Axis11 );
type->Value( "Joystick4Axis12", XE::KeyCode::Joystick4Axis12 );
type->Value( "Joystick4Axis13", XE::KeyCode::Joystick4Axis13 );
type->Value( "Joystick4Axis14", XE::KeyCode::Joystick4Axis14 );
type->Value( "Joystick4Axis15", XE::KeyCode::Joystick4Axis15 );
type->Value( "Joystick4Axis16", XE::KeyCode::Joystick4Axis16 );
type->Value( "Joystick4Axis17", XE::KeyCode::Joystick4Axis17 );
type->Value( "Joystick4Axis18", XE::KeyCode::Joystick4Axis18 );
type->Value( "Joystick4Axis19", XE::KeyCode::Joystick4Axis19 );
type->Value( "Joystick5Axis0", XE::KeyCode::Joystick5Axis0 );
type->Value( "Joystick5Axis1", XE::KeyCode::Joystick5Axis1 );
type->Value( "Joystick5Axis2", XE::KeyCode::Joystick5Axis2 );
type->Value( "Joystick5Axis3", XE::KeyCode::Joystick5Axis3 );
type->Value( "Joystick5Axis4", XE::KeyCode::Joystick5Axis4 );
type->Value( "Joystick5Axis5", XE::KeyCode::Joystick5Axis5 );
type->Value( "Joystick5Axis6", XE::KeyCode::Joystick5Axis6 );
type->Value( "Joystick5Axis7", XE::KeyCode::Joystick5Axis7 );
type->Value( "Joystick5Axis8", XE::KeyCode::Joystick5Axis8 );
type->Value( "Joystick5Axis9", XE::KeyCode::Joystick5Axis9 );
type->Value( "Joystick5Axis10", XE::KeyCode::Joystick5Axis10 );
type->Value( "Joystick5Axis11", XE::KeyCode::Joystick5Axis11 );
type->Value( "Joystick5Axis12", XE::KeyCode::Joystick5Axis12 );
type->Value( "Joystick5Axis13", XE::KeyCode::Joystick5Axis13 );
type->Value( "Joystick5Axis14", XE::KeyCode::Joystick5Axis14 );
type->Value( "Joystick5Axis15", XE::KeyCode::Joystick5Axis15 );
type->Value( "Joystick5Axis16", XE::KeyCode::Joystick5Axis16 );
type->Value( "Joystick5Axis17", XE::KeyCode::Joystick5Axis17 );
type->Value( "Joystick5Axis18", XE::KeyCode::Joystick5Axis18 );
type->Value( "Joystick5Axis19", XE::KeyCode::Joystick5Axis19 );
type->Value( "JoystickPov0", XE::KeyCode::JoystickPov0 );
type->Value( "JoystickPov1", XE::KeyCode::JoystickPov1 );
type->Value( "JoystickPov2", XE::KeyCode::JoystickPov2 );
type->Value( "JoystickPov3", XE::KeyCode::JoystickPov3 );
type->Value( "JoystickPov4", XE::KeyCode::JoystickPov4 );
type->Value( "JoystickPov5", XE::KeyCode::JoystickPov5 );
type->Value( "JoystickPov6", XE::KeyCode::JoystickPov6 );
type->Value( "JoystickPov7", XE::KeyCode::JoystickPov7 );
type->Value( "JoystickPov8", XE::KeyCode::JoystickPov8 );
type->Value( "JoystickPov9", XE::KeyCode::JoystickPov9 );
type->Value( "JoystickPov10", XE::KeyCode::JoystickPov10 );
type->Value( "JoystickPov11", XE::KeyCode::JoystickPov11 );
type->Value( "JoystickPov12", XE::KeyCode::JoystickPov12 );
type->Value( "JoystickPov13", XE::KeyCode::JoystickPov13 );
type->Value( "JoystickPov14", XE::KeyCode::JoystickPov14 );
type->Value( "JoystickPov15", XE::KeyCode::JoystickPov15 );
type->Value( "JoystickPov16", XE::KeyCode::JoystickPov16 );
type->Value( "JoystickPov17", XE::KeyCode::JoystickPov17 );
type->Value( "JoystickPov18", XE::KeyCode::JoystickPov18 );
type->Value( "JoystickPov19", XE::KeyCode::JoystickPov19 );
type->Value( "Joystick1Pov0", XE::KeyCode::Joystick1Pov0 );
type->Value( "Joystick1Pov1", XE::KeyCode::Joystick1Pov1 );
type->Value( "Joystick1Pov2", XE::KeyCode::Joystick1Pov2 );
type->Value( "Joystick1Pov3", XE::KeyCode::Joystick1Pov3 );
type->Value( "Joystick1Pov4", XE::KeyCode::Joystick1Pov4 );
type->Value( "Joystick1Pov5", XE::KeyCode::Joystick1Pov5 );
type->Value( "Joystick1Pov6", XE::KeyCode::Joystick1Pov6 );
type->Value( "Joystick1Pov7", XE::KeyCode::Joystick1Pov7 );
type->Value( "Joystick1Pov8", XE::KeyCode::Joystick1Pov8 );
type->Value( "Joystick1Pov9", XE::KeyCode::Joystick1Pov9 );
type->Value( "Joystick1Pov10", XE::KeyCode::Joystick1Pov10 );
type->Value( "Joystick1Pov11", XE::KeyCode::Joystick1Pov11 );
type->Value( "Joystick1Pov12", XE::KeyCode::Joystick1Pov12 );
type->Value( "Joystick1Pov13", XE::KeyCode::Joystick1Pov13 );
type->Value( "Joystick1Pov14", XE::KeyCode::Joystick1Pov14 );
type->Value( "Joystick1Pov15", XE::KeyCode::Joystick1Pov15 );
type->Value( "Joystick1Pov16", XE::KeyCode::Joystick1Pov16 );
type->Value( "Joystick1Pov17", XE::KeyCode::Joystick1Pov17 );
type->Value( "Joystick1Pov18", XE::KeyCode::Joystick1Pov18 );
type->Value( "Joystick1Pov19", XE::KeyCode::Joystick1Pov19 );
type->Value( "Joystick2Pov0", XE::KeyCode::Joystick2Pov0 );
type->Value( "Joystick2Pov1", XE::KeyCode::Joystick2Pov1 );
type->Value( "Joystick2Pov2", XE::KeyCode::Joystick2Pov2 );
type->Value( "Joystick2Pov3", XE::KeyCode::Joystick2Pov3 );
type->Value( "Joystick2Pov4", XE::KeyCode::Joystick2Pov4 );
type->Value( "Joystick2Pov5", XE::KeyCode::Joystick2Pov5 );
type->Value( "Joystick2Pov6", XE::KeyCode::Joystick2Pov6 );
type->Value( "Joystick2Pov7", XE::KeyCode::Joystick2Pov7 );
type->Value( "Joystick2Pov8", XE::KeyCode::Joystick2Pov8 );
type->Value( "Joystick2Pov9", XE::KeyCode::Joystick2Pov9 );
type->Value( "Joystick2Pov10", XE::KeyCode::Joystick2Pov10 );
type->Value( "Joystick2Pov11", XE::KeyCode::Joystick2Pov11 );
type->Value( "Joystick2Pov12", XE::KeyCode::Joystick2Pov12 );
type->Value( "Joystick2Pov13", XE::KeyCode::Joystick2Pov13 );
type->Value( "Joystick2Pov14", XE::KeyCode::Joystick2Pov14 );
type->Value( "Joystick2Pov15", XE::KeyCode::Joystick2Pov15 );
type->Value( "Joystick2Pov16", XE::KeyCode::Joystick2Pov16 );
type->Value( "Joystick2Pov17", XE::KeyCode::Joystick2Pov17 );
type->Value( "Joystick2Pov18", XE::KeyCode::Joystick2Pov18 );
type->Value( "Joystick2Pov19", XE::KeyCode::Joystick2Pov19 );
type->Value( "Joystick3Pov0", XE::KeyCode::Joystick3Pov0 );
type->Value( "Joystick3Pov1", XE::KeyCode::Joystick3Pov1 );
type->Value( "Joystick3Pov2", XE::KeyCode::Joystick3Pov2 );
type->Value( "Joystick3Pov3", XE::KeyCode::Joystick3Pov3 );
type->Value( "Joystick3Pov4", XE::KeyCode::Joystick3Pov4 );
type->Value( "Joystick3Pov5", XE::KeyCode::Joystick3Pov5 );
type->Value( "Joystick3Pov6", XE::KeyCode::Joystick3Pov6 );
type->Value( "Joystick3Pov7", XE::KeyCode::Joystick3Pov7 );
type->Value( "Joystick3Pov8", XE::KeyCode::Joystick3Pov8 );
type->Value( "Joystick3Pov9", XE::KeyCode::Joystick3Pov9 );
type->Value( "Joystick3Pov10", XE::KeyCode::Joystick3Pov10 );
type->Value( "Joystick3Pov11", XE::KeyCode::Joystick3Pov11 );
type->Value( "Joystick3Pov12", XE::KeyCode::Joystick3Pov12 );
type->Value( "Joystick3Pov13", XE::KeyCode::Joystick3Pov13 );
type->Value( "Joystick3Pov14", XE::KeyCode::Joystick3Pov14 );
type->Value( "Joystick3Pov15", XE::KeyCode::Joystick3Pov15 );
type->Value( "Joystick3Pov16", XE::KeyCode::Joystick3Pov16 );
type->Value( "Joystick3Pov17", XE::KeyCode::Joystick3Pov17 );
type->Value( "Joystick3Pov18", XE::KeyCode::Joystick3Pov18 );
type->Value( "Joystick3Pov19", XE::KeyCode::Joystick3Pov19 );
type->Value( "Joystick4Pov0", XE::KeyCode::Joystick4Pov0 );
type->Value( "Joystick4Pov1", XE::KeyCode::Joystick4Pov1 );
type->Value( "Joystick4Pov2", XE::KeyCode::Joystick4Pov2 );
type->Value( "Joystick4Pov3", XE::KeyCode::Joystick4Pov3 );
type->Value( "Joystick4Pov4", XE::KeyCode::Joystick4Pov4 );
type->Value( "Joystick4Pov5", XE::KeyCode::Joystick4Pov5 );
type->Value( "Joystick4Pov6", XE::KeyCode::Joystick4Pov6 );
type->Value( "Joystick4Pov7", XE::KeyCode::Joystick4Pov7 );
type->Value( "Joystick4Pov8", XE::KeyCode::Joystick4Pov8 );
type->Value( "Joystick4Pov9", XE::KeyCode::Joystick4Pov9 );
type->Value( "Joystick4Pov10", XE::KeyCode::Joystick4Pov10 );
type->Value( "Joystick4Pov11", XE::KeyCode::Joystick4Pov11 );
type->Value( "Joystick4Pov12", XE::KeyCode::Joystick4Pov12 );
type->Value( "Joystick4Pov13", XE::KeyCode::Joystick4Pov13 );
type->Value( "Joystick4Pov14", XE::KeyCode::Joystick4Pov14 );
type->Value( "Joystick4Pov15", XE::KeyCode::Joystick4Pov15 );
type->Value( "Joystick4Pov16", XE::KeyCode::Joystick4Pov16 );
type->Value( "Joystick4Pov17", XE::KeyCode::Joystick4Pov17 );
type->Value( "Joystick4Pov18", XE::KeyCode::Joystick4Pov18 );
type->Value( "Joystick4Pov19", XE::KeyCode::Joystick4Pov19 );
type->Value( "Joystick5Pov0", XE::KeyCode::Joystick5Pov0 );
type->Value( "Joystick5Pov1", XE::KeyCode::Joystick5Pov1 );
type->Value( "Joystick5Pov2", XE::KeyCode::Joystick5Pov2 );
type->Value( "Joystick5Pov3", XE::KeyCode::Joystick5Pov3 );
type->Value( "Joystick5Pov4", XE::KeyCode::Joystick5Pov4 );
type->Value( "Joystick5Pov5", XE::KeyCode::Joystick5Pov5 );
type->Value( "Joystick5Pov6", XE::KeyCode::Joystick5Pov6 );
type->Value( "Joystick5Pov7", XE::KeyCode::Joystick5Pov7 );
type->Value( "Joystick5Pov8", XE::KeyCode::Joystick5Pov8 );
type->Value( "Joystick5Pov9", XE::KeyCode::Joystick5Pov9 );
type->Value( "Joystick5Pov10", XE::KeyCode::Joystick5Pov10 );
type->Value( "Joystick5Pov11", XE::KeyCode::Joystick5Pov11 );
type->Value( "Joystick5Pov12", XE::KeyCode::Joystick5Pov12 );
type->Value( "Joystick5Pov13", XE::KeyCode::Joystick5Pov13 );
type->Value( "Joystick5Pov14", XE::KeyCode::Joystick5Pov14 );
type->Value( "Joystick5Pov15", XE::KeyCode::Joystick5Pov15 );
type->Value( "Joystick5Pov16", XE::KeyCode::Joystick5Pov16 );
type->Value( "Joystick5Pov17", XE::KeyCode::Joystick5Pov17 );
type->Value( "Joystick5Pov18", XE::KeyCode::Joystick5Pov18 );
type->Value( "Joystick5Pov19", XE::KeyCode::Joystick5Pov19 );
END_META()

BEG_META( XE::ThreadType )
type->Value( "IO", XE::ThreadType::IO );
type->Value( "GAME", XE::ThreadType::GAME );
type->Value( "RENDER", XE::ThreadType::RENDER );
type->Value( "PHYSICS", XE::ThreadType::PHYSICS );
type->Value( "WORKS", XE::ThreadType::WORKS );
type->Value( "WORKS", XE::ThreadType::UNKNOWN );
END_META()
